---
title: Visualizing Countries Contributions to Climate Change (Greenhouse Gases Emission)
format: 
  poster-typst:
    size: "33x23"
    
    poster-authors: "Ang Hui Lun, Poh Kuang Yi, Muhammad Nur Dinie, Lim Wei Wen, Efilio Yodia Garcia, Tan Ang Kang"
    
    departments: "Information and Communication Technologies"
    
    institution-logo: "./images/sit-logo.png"
    
    footer-text: "University Of Glasgow"
    
    footer-emails: "2201377, 2201354, 2200936, 2201116, 2200516, 2203210"
    
execute:
  echo: false
  
knitr: 
  opts_chunk:
    dev: svglite
---

```{r}
#| label: setup
#| include: false
#| echo: false
#| message: false
#| warning: false

library(cowplot)
library(ggplot2)
library(ggtext)
library(ggrepel)
library(mapview)
library(rmapshaper)
library(rnaturalearth)
library(knitr)
library(scales)
library(sf)
library(tidyverse)

# Load dataframe from Data Preprocessing file
purl("CSC3107_Seashell_DataPreprocessing.qmd")
source("CSC3107_Seashell_DataPreprocessing.R")
```

# Introduction
 
Climate change has significantly impacted the environment for decades, largely due to human activities, particularly modern industrialization. The rise in greenhouse gas emissions from industrial activities[^jeeven_identification_2020] has increased Earth's surface temperature, trapping heat and preventing cooling[^tavassoli_effective_2023]. This has led to more frequent heat waves, intense rainfall, and other extreme climate events.
\
\
Addressing greenhouse gas emissions is more urgent than ever. Communicating their sources and impacts is crucial for raising awareness and encouraging action. In this project, we built on CNN's visualizations of emissions by country[^CNN_article_2024] to highlight contributions to greenhouse gas emissions and emphasize the efforts needed to combat climate change. We developed a visualization of the top 10 greenhouse gas emitters per capita in 2022, providing a more comprehensive and engaging representation of the data.

[^jeeven_identification_2020]: Jeeven Ravi et al., "Identification of Greenhouse Gases Emission Thorough Exploration of The Emission from Different Sectors" 2020 6th International Conference on Computing Engineering and Design (ICCED), 2020, pp. 1-7
[^tavassoli_effective_2023]: M. Tavassoli et al., "Comparison of effective greenhouse gases and global warming" 2023 8th International Conference on Technology and Energy Management (ICTEM), 2023, pp 1-5
[^CNN_article_2024]: https://edition.cnn.com/interactive/2023/12/us/countries-climate-change-emissions-cop28/

# Previous Visualization

```{r}
#| label: ghgemission-initial
#| fig-cap: 
#| - "Percentage of emissions reduction needed by 2030, among current top emitters and Total greenhouse gas emissions by country in 2022"
#| out-width: "85%"

include_graphics("./images/combined_previous.jpg")
```


# Strengths

*   The dynamic bubble chart emphasizes rankings and visualizes leading countriesâ€™ emission contributions in 2022, showing metrics and the amount of greenhouse gas emitted, including data for countries outside the top 20 when hovered.
*   The bar graph includes future predictions up to 2030 to show estimated CO2 emissions by country, scaled to specific units despite CSS-related visibility issues.
*   Different hues of red describe the intensity of the data, providing a clear visual distinction.

```{r}
#| label: bubble-hover-not-top20
#| fig-cap: "Zoomed in screenshot of the bubble chart when hovered over to show metric and amount of greenhouse gas emitted by country outside of the top 20"
#| out-width: "30%"

include_graphics("./images/bubble_hover.png")
```

# Suggested Improvements

*    *More labels* could be used with the bubble chart and graphs to convey the content more effectively at a glance.
*    *Provide a legend* for the bubble chart to show the size of the bubble represents the amount of emissions.
*    *Use the choropleth map* to show top 10 emitters of the world and visualize the greenhouse gas emissions per capita globally. This will highlight the emission contributions of leading countries relative to others, making it easier to identify key emitters.
*    *Provide a line to map* the country labels to the respective country in the choropleth map.
*    *Leverage on a bubble plot* to represent the predicted emission reduction for the top 10 countries on top of the choropleth map, where the bubble sizes distinctly represent the required emission reduction for each country.
*    *Use a colour palette* to indicate the intensity of each country's emission contribution, providing a clear visual difference.
*    *The integration of bubble plot on the choropleth map combines the information from two graphs* into a single comprehensive visualization.

# Implementation

## Data
*   Data on CO2 and Greenhouse Gas Emissions by Our World in Data[^co2_ghg_owd_2024]
*   Annual Greenhouse Gas Emissions by Our World in Data[^ghg_owd_2024]
*   Greenhouse Gases Per Capita by Our World in Data[^ghg_percap_owd_2024]

## Data Processing for map visualization
*   We first processed the data used to create the ggplot2 visualization. The data was cleaned and transformed to ensure it was suitable for the visualization. The data was then merged with the world map data to create the choropleth map.
*   Finally the minimap was created and overlaid, and the two plots were combined using cowplot to create the final visualization.

[^co2_ghg_owd_2024]: https://github.com/owid/co2-data?tafb=readme-ov-file
[^ghg_owd_2024]: https://ourworldindata.org/grapher/total-ghg-emissions?tab=table
[^ghg_percap_owd_2024]: https://ourworldindata.org/grapher/per-capita-ghg-emissions?tab=table

## Software
We used the Quarto publication framework and the R programming language, along with the following third-party packages:

*   *tidyverse* for data transformation
*   *ggplot2* for visualization.
*   *rnaturalearth* for the choropleth map.
*   *ggrepel* provides geoms for overlapping text labels.
*   *ggtext* for markdown elements.
*   *mapview* for checking map features.
*   *rmapshaper* for simpler map features.
*   *scales* for legend breaks.
*   *sf* for geometrical operation purposes.
*   *knitr* for dynamic document generation.
*   *cowplot* for combining multiple plots into a single visualization.


```{r}
#| label: load-world-map

# Get world map data
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

# Check the number of spatial features obtained from open source data
# Recommended to generally have fewer than 10,000 geospatial data points
if (npts(world) >= 10000) {
  world <- ms_simplify(world)
}
```

```{r}
# Define map projection
map_projection <- "ESRI:54017"

# Merge emissions data with world map and transform
world <- world |>
  left_join(ghg_2022_projected_2030, by = c("name" = "country")) |>
  st_transform(map_projection)

# Sort and add ranking by per capita GHG emissions
world_simplified <- world |>
  arrange(desc(pc_ghg_emissions_t)) |>
  mutate(ranking = row_number()) |>
  select(
    ranking,
    name,
    code,
    geometry,
    pc_ghg_emissions_t,
    pc_projected_ghg_emissions_t
  )

# Subset top 10 emitters and calculate label offsets
top_10 <- head(world_simplified, 10)
label_offsets <- data.frame(
  country = top_10$name,
  offset_x = 0,
  offset_y = 0
)

# Merge offsets with simplified world data and calculate centroid coordinates
world_simplified <-
  left_join(world_simplified, label_offsets, by = c("name" = "country")) |>
  mutate(
    .data = world_simplified,
    centroid = st_centroid(geometry),
    x = st_coordinates(centroid)[, 1],
    y = st_coordinates(centroid)[, 2]
  )

# Extract details for the first data point among top 10
top_10 <- subset(world_simplified, ranking <= 10)
first_data_point <- top_10[1, ]
```

```{r}
#| label: create-main-map

# Set colour palette, last of YlOrRd
bubble_color <- "#800026"

# Set seed to reproduce same settings
set.seed(1234567890)

# Define earth polygon
earth <- st_polygon(
  x = list(
    cbind(
      c(rep(-180, 181), rep(180, 181), -180), c(-90:90, 90:-90, -90)
    )
  )
) |>
  st_sfc() |>
  st_set_crs(4326) |>
  st_as_sf()

# Create choropleth map
main_map <- ggplot(data = world_simplified) +
  geom_sf(data = earth, fill = "lightblue") +
  geom_sf(
    aes(fill = pc_ghg_emissions_t),
    color = "black",
    size = 0.2
  ) +
  geom_label_repel(
    data = top_10,
    aes(
      x = x + offset_x,
      y = y + offset_y,
      label = sprintf("%d. %s", ranking, code)
    ),
    size = 1.5,
    box.padding = 0.7,
    point.padding = 0.1,
    max.overlaps = Inf,
    seed = 1234567890,
    fill = scales::alpha("white", 0.85),
    label.size = 0.1,
    fontface = "bold"
  ) +
  geom_point(
    data = filter(top_10, !is.na(pc_projected_ghg_emissions_t)),
    aes(
      x = x,
      y = y,
      size = pc_projected_ghg_emissions_t
    ),
    color = bubble_color,
    alpha = 0.5
  ) +
  scale_fill_fermenter(
    breaks = pretty_breaks(n = 8),
    palette = "YlOrRd",
    direction = 1,
    name = "Per Capita GHG Emissions (t)"
  ) +
  scale_size(
    range = c(1, 5),
    name = "Projected Reduction (%)"
  ) +
  guides(
    fill = guide_colorbar(
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom"
    ),
    size = guide_legend(
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom"
    )
  ) +
  labs(
    title = "<b>2022 Per Capita GHG Emissions <br> and 2030 Projected Reduction</b>",
    subtitle = "<b>Top 10 Emitters in tonnes (t)</b>",
    caption = "Source: Our World in Data",
    x = NULL,
    y = NULL
  ) +
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.frame = element_rect(),
    legend.text = element_text(size = 6.5),
    legend.title = element_text(size = 10),
    legend.position = "bottom",
    legend.key.width = unit(1, "cm"),
    legend.key.height = unit(0.4, "cm"),
    text = element_text(size = 12),
    plot.title = element_markdown(),
    plot.subtitle = element_markdown()
  )
```

```{r}
#| label: create-mini-map

# Define the zoom factor and the first data point
zoom_factor <- 5
first_data_point <- top_10[1, ]
zoom_to <- c(first_data_point$x, first_data_point$y)

# Calculate the spans in the Behrmann projection
C <- 40075016.686 # Circumference of the Earth in meters
x_span <- C / 2^zoom_factor
y_span <- C / 2^(zoom_factor + 1)

# Calculate bounds in the Behrmann projection
x_bounds <- c(zoom_to[1] - x_span / 2, zoom_to[1] + x_span / 2)
y_bounds <- c(zoom_to[2] - y_span / 2, zoom_to[2] + y_span / 2)

# Create the mini-map
mini_map <- ggplot() +
  geom_sf(data = earth, fill = "lightblue") +
  geom_sf(
    data = world_simplified, aes(fill = pc_ghg_emissions_t),
    color = "black",
    size = 0.2
  ) +
  coord_sf(xlim = x_bounds, ylim = y_bounds, crs = map_projection) +
  geom_label(
    data = data.frame(
      x = zoom_to[1] - 0.095 * 100000, # Adjust the offset to meters
      y = zoom_to[2] + 2.000 * 100000,
      label = sprintf("%d. %s", first_data_point$ranking, first_data_point$code)
    ),
    aes(x = x, y = y, label = label),
    size = 2.5,
    fill = scales::alpha("white", 0.65),
    label.size = 0.1,
    fontface = "bold"
  ) +
  scale_fill_fermenter(
    breaks = pretty_breaks(n = 9),
    palette = "YlOrRd",
    direction = 1,
    na.value = "grey"
  ) +
  theme_void() +
  theme(
    text = element_text(size = 5),
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.6),
    plot.title = element_markdown(),
    plot.subtitle = element_markdown(),
    axis.text = element_blank(),
    axis.title = element_blank()
  ) +
  guides(
    fill = "none"
  )

# Combine the main map and the mini-map using cowplot
combined_plot <-
  cowplot::ggdraw(main_map) +
  cowplot::draw_plot(
    mini_map,
    x = 0.158,
    y = 0.346,
    width = 0.17,
    height = 0.090
  )
```

# Improved Visualization

```{r}
#| label: ghgemission-improved
#| fig-cap: "Combined total emission per capital & amount of predicted reduction of greenhouse gases."
#| out-width: "100%"

# Display the combined plot
combined_plot
```

# Insights

*   **High Emission Sources:** The top emitters are primarily fossil fuel-rich countries like Qatar, Brunei, Kuwait, UAE, Oman, and Saudi Arabia, along with coal-dependent and industrial nations such as Mongolia, Australia, Canada, and Turkmenistan. These countries' high emissions are driven by extensive oil and gas production, coal usage, and energy-intensive industries.[^hes_source]

*   **Projected Reduction:** The bubble plot overlay shows the projected emission reduction. However, many countries in the top 10 did not participate in the survey. Consequently, only 3 bubble plots are included to represent the projected reduction of greenhouse gas emissions.

*   **Skewed Data:** The data is skewed towards 70 tonnes due to an outlier, the top emitter, Qatar, while the remaining nine countries fall within the range of 20 to 40 tonnes. This outlier may be attributed to Qatar's emission spike during the World Cup 2022.[^SkewData_source]

[^hes_source]: https://www.straitstimes.com/world/middle-east/to-meet-climate-goals-gulf-countries-will-have-to-overhaul-everything

[^SkewData_source]: https://www.scientificamerican.com/article/the-world-cup-in-qatar-is-a-climate-catastrophe/

# Conclusion
We successfully implemented all suggested improvements for the non-interactive visualization. By adding numerical figures, labels, and legends, the revised visualisation is more informative. The choropleth map highlights the top 10 emitters and global per capita emissions, making key contributors easy to identify. Lines mapping country labels and emissions enhance clarity, while bubble sizes for recommended reductions and a color palette for emission intensities ensure the visualization is comprehensive and readable.